name: Train Model

on: [push]

jobs:
  train:
    runs-on: ubuntu-24.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision
        pip install torchsummary
        
    - name: Check model architecture
      id: architecture
      continue-on-error: true
      run: |
        python test_model.py
        
    - name: Train model
      id: training
      continue-on-error: true
      run: |
        python train.py
        
    - name: Check training success
      id: check
      run: |
        if [ "${{ steps.architecture.outcome }}" == "failure" ] || [ "${{ steps.training.outcome }}" == "failure" ]; then
          echo "status=failure" >> $GITHUB_OUTPUT
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -X POST \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
               -d '{"state":"failure","context":"ML Pipeline","description":"Training failed"}'
        else
          echo "status=success" >> $GITHUB_OUTPUT
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -X POST \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
               -d '{"state":"success","context":"ML Pipeline","description":"Training successful"}'
        fi
        
    - name: Upload training logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: training-logs
        path: training.log
        retention-days: 90
        
    - name: Upload best model
      if: steps.check.outputs.status == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: best-model
        path: best_model.pth
        retention-days: 90

    - name: Update README badge
      if: always()
      run: |
        if [ "${{ steps.check.outputs.status }}" == "success" ]; then
          sed -i 's/ML%20Pipeline-.*-success/ML%20Pipeline-Active-success/' README.md
        else
          sed -i 's/ML%20Pipeline-.*-success/ML%20Pipeline-Failed-red/' README.md
        fi
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "Update ML Pipeline badge status" || echo "No changes to commit"
        git push || echo "No changes to push" 